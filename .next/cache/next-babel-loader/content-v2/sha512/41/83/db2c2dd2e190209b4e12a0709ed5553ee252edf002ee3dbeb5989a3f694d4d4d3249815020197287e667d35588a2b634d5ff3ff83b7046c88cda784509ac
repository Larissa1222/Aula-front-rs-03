{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/larissa/Documentos/01-Front-Rocket/aula-03-ignews/src/pages/posts/index.tsx\";\nimport Head from 'next/head';\nimport Prismic from '@prismicio/client';\nimport { RichText } from 'prismic-dom';\nimport Link from 'next/link';\nimport { getPrismicClient } from '../../services/prismic';\nimport styles from './styles.module.scss';\nexport default function Posts({\n  posts\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Posts | Ignews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.posts,\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(Link, {\n          href: `/posts/${post.slug}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: [/*#__PURE__*/_jsxDEV(\"time\", {\n              children: [\" \", post.updatedAt, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: post.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.excerpt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this)]\n          }, post.slug, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport const getStaticProps = async () => {\n  const prismic = getPrismicClient();\n  const response = await prismic.query([Prismic.predicates.at('document.type', 'post')], {\n    fetch: ['post.title', 'post.content'],\n    pageSize: 100\n  }); //para formatar os posts \n\n  const posts = response.results.map(post => {\n    var _post$data$content$fi, _post$data$content$fi2;\n\n    return {\n      slug: post.uid,\n      title: RichText.asText(post.data.title),\n      excerpt: (_post$data$content$fi = (_post$data$content$fi2 = post.data.content.find(content => content.type === 'paragraph')) === null || _post$data$content$fi2 === void 0 ? void 0 : _post$data$content$fi2.text) !== null && _post$data$content$fi !== void 0 ? _post$data$content$fi : '',\n      updatedAt: new Date(post.last_publication_date).toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      })\n    };\n  });\n  return {\n    props: {\n      posts\n    }\n  };\n};","map":{"version":3,"sources":["/home/larissa/Documentos/01-Front-Rocket/aula-03-ignews/src/pages/posts/index.tsx"],"names":["Head","Prismic","RichText","Link","getPrismicClient","styles","Posts","posts","container","map","post","slug","updatedAt","title","excerpt","getStaticProps","prismic","response","query","predicates","at","fetch","pageSize","results","uid","asText","data","content","find","type","text","Date","last_publication_date","toLocaleDateString","day","month","year","props"],"mappings":";;;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AAYA,eAAe,SAASC,KAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAAuC;AACpD,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAM,MAAA,SAAS,EAAEF,MAAM,CAACG,SAAxB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEH,MAAM,CAACE,KAAvB;AAAA,kBACGA,KAAK,CAACE,GAAN,CAAUC,IAAI,iBACb,QAAC,IAAD;AAAM,UAAA,IAAI,EAAG,UAASA,IAAI,CAACC,IAAK,EAAhC;AAAA,iCACE;AAAA,oCACE;AAAA,8BAAQD,IAAI,CAACE,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAASF,IAAI,CAACG;AAAd;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAIH,IAAI,CAACI;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA,aAAQJ,IAAI,CAACC,IAAb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA,kBADF;AAsBD;AAED,OAAO,MAAMI,cAA8B,GAAG,YAAY;AACxD,QAAMC,OAAO,GAAGZ,gBAAgB,EAAhC;AAEA,QAAMa,QAAQ,GAAG,MAAMD,OAAO,CAACE,KAAR,CAAc,CACnCjB,OAAO,CAACkB,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,MAAvC,CADmC,CAAd,EAEpB;AACDC,IAAAA,KAAK,EAAE,CAAC,YAAD,EAAe,cAAf,CADN;AAEDC,IAAAA,QAAQ,EAAE;AAFT,GAFoB,CAAvB,CAHwD,CASxD;;AACA,QAAMf,KAAK,GAAGU,QAAQ,CAACM,OAAT,CAAiBd,GAAjB,CAAqBC,IAAI,IAAI;AAAA;;AACzC,WAAO;AACLC,MAAAA,IAAI,EAAED,IAAI,CAACc,GADN;AAELX,MAAAA,KAAK,EAAEX,QAAQ,CAACuB,MAAT,CAAgBf,IAAI,CAACgB,IAAL,CAAUb,KAA1B,CAFF;AAGLC,MAAAA,OAAO,qDAAEJ,IAAI,CAACgB,IAAL,CAAUC,OAAV,CAAkBC,IAAlB,CAAuBD,OAAO,IAAIA,OAAO,CAACE,IAAR,KAAiB,WAAnD,CAAF,2DAAE,uBAAiEC,IAAnE,yEAA2E,EAH7E;AAILlB,MAAAA,SAAS,EAAE,IAAImB,IAAJ,CAASrB,IAAI,CAACsB,qBAAd,EAAqCC,kBAArC,CAAwD,OAAxD,EAAiE;AAC1EC,QAAAA,GAAG,EAAE,SADqE;AAE1EC,QAAAA,KAAK,EAAE,SAFmE;AAG1EC,QAAAA,IAAI,EAAE;AAHoE,OAAjE;AAJN,KAAP;AAUD,GAXa,CAAd;AAaA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL9B,MAAAA;AADK;AADF,GAAP;AAKD,CA5BM","sourcesContent":["import { GetStaticProps } from 'next';\nimport Head from 'next/head';\nimport Prismic from '@prismicio/client';\nimport { RichText } from 'prismic-dom'\nimport Link from 'next/link';\n\nimport { getPrismicClient } from '../../services/prismic';\n\nimport styles from './styles.module.scss';\n\ntype Post = {\n  slug: string;\n  title: string;\n  excerpt: string;\n  updatedAt: string;\n};\ninterface PostsProps {\n  posts: Post[]\n}\n\nexport default function Posts ({ posts }: PostsProps) {\n  return (\n    <>\n      <Head>\n        <title>Posts | Ignews</title>\n      </Head>\n\n      <main className={styles.container}>\n        <div className={styles.posts}>\n          {posts.map(post => (\n            <Link href={`/posts/${post.slug}`}>\n              <a key={post.slug}>\n                <time> {post.updatedAt} </time>\n                <strong>{post.title}</strong>\n                <p>{post.excerpt}</p>\n              </a>\n            </Link>\n          ))}\n\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async () => {\n  const prismic = getPrismicClient()\n  \n  const response = await prismic.query([\n    Prismic.predicates.at('document.type', 'post')\n  ], {\n    fetch: ['post.title', 'post.content'],\n    pageSize: 100,\n  })\n  //para formatar os posts \n  const posts = response.results.map(post => {\n    return {\n      slug: post.uid,\n      title: RichText.asText(post.data.title),\n      excerpt: post.data.content.find(content => content.type === 'paragraph')?.text ?? '',\n      updatedAt: new Date(post.last_publication_date).toLocaleDateString('pt-BR', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric'\n      })\n    }\n  });\n\n  return {\n    props: {\n      posts\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}